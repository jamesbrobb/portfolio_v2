@import "responsive";


@mixin flex-grid(
  $grid_class_name:'grid',
  $grid_item_class_name:'grid-item',
  $min-column-width:200px,
  $vertical-gap:10px,
  $horizontal-gap:10px,
  $row-height:fit-content,
  $column-count:4) {

  .#{$grid_class_name} {
    --flex-grid-vertical-gap: var(--grid-vertical-gap, #{$vertical-gap});
    --flex-grid-horizontal-gap: var(--grid-horizontal-gap, #{$horizontal-gap});
    --flex-grid-column-count: var(--grid-column-count, #{$column-count});
    --flex-grid-row-height: var(--grid-row-height, #{$row-height});
    --flex-grid-min-col-width: var(--grid-min-column-width, #{$min-column-width});

    display: flex;
    flex-flow: row wrap;
    justify-content: flex-start;
    align-content: flex-start;
    margin: calc((var(--flex-grid-vertical-gap) * -1)/2) calc((var(--flex-grid-horizontal-gap) * -1)/2);

    > .#{$grid_item_class_name} {
      flex: 0 0 calc((100%/var(--flex-grid-column-count)) - var(--flex-grid-horizontal-gap));
      margin: calc(var(--flex-grid-vertical-gap) / 2) calc(var(--flex-grid-horizontal-gap) / 2);
      height: var(--flex-grid-row-height);
      min-width: var(--flex-grid-min-col-width);
    }
  }
}

@mixin responsive-flex-grid($grid_class_name:'grid', $min-column-width:200px, $horizontal-gap:10px) {

  /* used in conjunction with [responsiveContainer] directive*/

  @each $name in $breakpoint-keys {
    $i: index($breakpoint-keys, $name);
    --#{$name}: #{($min-column-width * $i) + ($horizontal-gap * $i)};

    .#{$grid_class_name}.#{$name} {
      --grid-column-count: #{$i};
    }
  }
}
